name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows ]
        configuration: [ Release, Debug ]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y libgl-dev libglu1-mesa-dev

    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.0

    - name: Install latest g++ for C++20
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install gcc-10 g++-10
        echo "CC=gcc-10" >> $GITHUB_ENV
        echo "CXX=g++-10" >> $GITHUB_ENV

    - name: Clone repo
      uses: actions/checkout@v3
      with:
        submodules: recursive
    
    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} -DPUTILS_IMGUI=ON -DPUTILS_LUA=ON -DPUTILS_MEDIATOR=ON -DPUTILS_OPENGL=ON -DPUTILS_PLUGIN_MANAGER=ON -DPUTILS_PYTHON=ON -DPUTILS_TESTS=ON

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.configuration }}

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ matrix.configuration }}
      
